{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "type": "string",
            "metadata": {
              "description": "VNet name"
            }
          },
          "vnetAddressPrefix": {
            "type": "string",
            "metadata": {
              "description": "Address prefix"
            }
          },
          "subnet1Prefix": {
            "type": "string",
            "metadata": {
              "description": "Subnet 1 Prefix"
            }
          },
          "subnet1Name": {
            "type": "string",
            "metadata": {
              "description": "Subnet 1 Name"
            }
          },
          "subnet2Prefix": {
            "type": "string",
            "metadata": {
              "description": "Subnet 2 Prefix"
            }
          },
          "subnet2Name": {
            "type": "string",
            "metadata": {
              "description": "Subnet 2 Name"
            }
          },
          "subnet3Prefix": {
            "type": "string",
            "metadata": {
              "description": "Subnet 3 Prefix"
            }
          },
          "subnet3Name": {
            "type": "string",
            "metadata": {
              "description": "Subnet 3 Name"
            }
          },
        "sqlServerName": {
            "type": "string",
            "metadata": {
                "description": "The name you provide will be appended with a unique sting to make it globally available. Your server name can contain only lowercase letters, numbers, and '-', but can't start or end with '-' or have more than 49 characters."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Deployment region for all resources."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "Your login name must not contain a SQL Identifier or a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.) or a built-in database user or role (like dbo, guest, public, etc.)"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Your password must be at least 8 characters in length. Your password must contain characters from three of the following categories â€“ English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.) Your password cannot contain all or part of the login name. Part of a login name is defined as three or more consecutive alphanumeric characters."
            }
        },
        "allowAzureServicesToAccessSqlServer": {
            "type": "bool",
            "metadata": {
                "description": "By selecting Yes option, it allow Azure services to access SQL server. It is required so that Azure Data Factory can access SQL server "
            }
        },
        "sqlConnectionType": {
            "allowedValues": [
                "Default",
                "Redirect",
                "Proxy"
            ],
            "type": "string",
            "metadata": {
                "description": "SQL logical server connection type."
            }
        },
        "sqlDBName": {
            "type": "string",
            "metadata": {
                "description": "Value should not match special patterns. It should contain a length of maximum of 128."
            }
        },
        "keyVaultName": {
            "type": "string",
            "metadata": {
              "description": "Specifies the name of the key vault."
            }
          },
          "enabledForDeployment": {
            "type": "bool",
            "allowedValues": [
              true,
              false
            ],
            "metadata": {
              "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
            }
          },
          "enabledForDiskEncryption": {
            "type": "bool",
            "allowedValues": [
              true,
              false
            ],
            "metadata": {
              "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            }
          },
          "enabledForTemplateDeployment": {
            "type": "bool",
            "allowedValues": [
              true,
              false
            ],
            "metadata": {
              "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            }
          },
          "tenantId": {
            "type": "string",
            "metadata": {
              "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
            }
          },
          "objectId": {
            "type": "string",
            "metadata": {
              "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
            }
          },
          "keysPermissions": {
            "type": "array",
            "metadata": {
              "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
            }
          },
          "secretsPermissions": {
            "type": "array",
            "metadata": {
              "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
          },
          "skuName": {
            "type": "string",
            "allowedValues": [
              "Standard",
              "Premium"
            ],
            "metadata": {
              "description": "Specifies whether the key vault is a standard vault or a premium vault."
            }
          }
    },
    "variables": {
        "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
        "privateEndpointName": "myPrivateEndpoint",
        "privateDnsZoneName": "[concat('privatelink', environment().suffixes.sqlServerHostname)]",
        "pvtendpointdnsgroupname": "[concat(variables('privateEndpointName'),'/mydnsgroupname')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
              "addressSpace": {
                "addressPrefixes": [
                  "[parameters('vnetAddressPrefix')]"
                ]
              }
            },
            "resources": [
              {
                "type": "subnets",
                "apiVersion": "2020-05-01",
                "location": "[parameters('location')]",
                "name": "[parameters('subnet1Name')]",
                "dependsOn": [
                  "[parameters('vnetName')]"
                ],
                "properties": {
                  "addressPrefix": "[parameters('subnet1Prefix')]"
                }
              },
              {
                "type": "subnets",
                "apiVersion": "2020-05-01",
                "location": "[parameters('location')]",
                "name": "[parameters('subnet2Name')]",
                "dependsOn": [
                  "[parameters('vnetName')]",
                  "[parameters('subnet1Name')]"
                ],
                "properties": {
                  "addressPrefix": "[parameters('subnet2Prefix')]"
                }
              },
              {
                "type": "subnets",
                "apiVersion": "2020-05-01",
                "location": "[parameters('location')]",
                "name": "[parameters('subnet3Name')]",
                "dependsOn": [
                  "[parameters('vnetName')]",
                  "[parameters('subnet3Name')]"
                ],
                "properties": {
                  "addressPrefix": "[parameters('subnet3Prefix')]"
                }
              }
            ]
          },
        {
            "name": "sqlServerTemplate",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "./"
                },
                "parameters": {
                    "sqlServerName": {
                        "value": "[variables('sqlServerUniqueName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sqlAdministratorLogin": {
                        "value": "[parameters('sqlAdministratorLogin')]"
                    },
                    "sqlAdministratorLoginPassword": {
                        "value": "[parameters('sqlAdministratorLoginPassword')]"
                    },
                    "allowAzureServicesToAccessSqlServer": {
                        "value": "[parameters('allowAzureServicesToAccessSqlServer')]"
                    },
                    "sqlConnectionType": {
                        "value": "[parameters('sqlConnectionType')]"
                    },
                    "sqlDBName": {
                        "value": "[parameters('sqlDBName')]"
                    },
                    "dataWarehouseName": {
                        "value": "[parameters('dataWarehouseName')]"
                    },
                    "transparentDataEncryption": {
                        "value": "[parameters('transparentDataEncryption')]"
                    },
                    "serviceLevelObjective": {
                        "value": "[parameters('serviceLevelObjective')]"
                    },
                    "selectDataLoader": {
                        "value": "[parameters('selectDataLoader')]"
                    }
                }
            }
        },
        {
            "name": "keyVaultTemplate",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "./"
                },
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "location": {
                    "type": "string",
                    "defaultValue": "[resourceGroup().location]",
                    "metadata": {
                      "description": "Specifies the Azure location where the key vault should be created."
                    }
                  },
                  "enabledForDeployment": {
                    "type": "bool",
                    "defaultValue": false,
                    "allowedValues": [
                      true,
                      false
                    ],
                    "metadata": {
                      "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
                    }
                  },
                  "enabledForDiskEncryption": {
                    "type": "bool",
                    "defaultValue": false,
                    "allowedValues": [
                      true,
                      false
                    ],
                    "metadata": {
                      "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
                    }
                  },
                  "enabledForTemplateDeployment": {
                    "type": "bool",
                    "defaultValue": false,
                    "allowedValues": [
                      true,
                      false
                    ],
                    "metadata": {
                      "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "defaultValue": "[subscription().tenantId]",
                    "metadata": {
                      "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. Get it by using Get-AzSubscription cmdlet."
                    }
                  },
                  "objectId": {
                    "type": "string",
                    "metadata": {
                      "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
                    }
                  },
                  "keysPermissions": {
                    "type": "array",
                    "defaultValue": [
                      "list"
                    ],
                    "metadata": {
                      "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
                    }
                  },
                  "secretsPermissions": {
                    "type": "array",
                    "defaultValue": [
                      "list"
                    ],
                    "metadata": {
                      "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
                    }
                  },
                  "skuName": {
                    "type": "string",
                    "defaultValue": "Standard",
                    "allowedValues": [
                      "Standard",
                      "Premium"
                    ],
                    "metadata": {
                      "description": "Specifies whether the key vault is a standard vault or a premium vault."
                    }
                  }
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateEndpointName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[variables('vnetName')]",
              "[parameters('sqlServerName')]"
            ],
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnet1Name'))]"
              },
              "privateLinkServiceConnections": [
                {
                  "name": "[variables('privateEndpointName')]",
                  "properties": {
                    "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers',parameters('sqlServerName'))]",
                    "groupIds": [
                      "sqlServer"
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-01-01",
            "name": "[variables('privateDnsZoneName')]",
            "location": "global",
            "dependsOn": [
              "[variables('vnetName')]"
            ],
            "properties": ""
          },
          {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-01-01",
            "name": "[concat(variables('privateDnsZoneName'), '/', variables('privateDnsZoneName'), '-link')]",
            "location": "global",
            "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
              "registrationEnabled": false,
              "virtualNetwork": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
              }
            }
          },
          {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('pvtendpointdnsgroupname')]",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
              "[variables('privateEndpointName')]"
            ],
            "properties": {
              "privateDnsZoneConfigs": [
                {
                  "name": "config1",
                  "properties": {
                    "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                  }
                }
              ]
            }
          }
    ]
}